/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-07-13 02:09:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import ssg.com.a.dto.MemberDto;
import java.util.List;

public final class hello_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("ssg.com.a.dto.MemberDto");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	List<MemberDto> list = (List<MemberDto>)request.getAttribute("list");

      out.write("    \r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>hello.jsp</title>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js\">\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<h2>Hello</h2>\r\n");
      out.write("<table border=\"1\">\r\n");
      out.write("<tr>\r\n");
      out.write("	<th>번호</th><th>아이디</th><th>패스워드</th><th>이름</th><th>이메일</th>\r\n");
      out.write("</tr>\r\n");

if(list != null && list.size() > 0){
	for(int i = 0;i < list.size(); i++){
		MemberDto dto = list.get(i);
		
      out.write("\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>");
      out.print(i+1 );
      out.write("</th>\r\n");
      out.write("			<td>");
      out.print(dto.getId() );
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print(dto.getPwd() );
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print(dto.getName() );
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print(dto.getEmail() );
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		");

	}
}

      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("<br>\r\n");
      out.write("<hr>\r\n");
      out.write("<br>\r\n");
      out.write("<form action=\"find.do\">\r\n");
      out.write("	id:<input type=\"text\" name=\"id\" size=\"20\">\r\n");
      out.write("	<input type=\"submit\" value=\"회원정보찾기\">\r\n");
      out.write("</form>\r\n");

	MemberDto mem = (MemberDto)request.getAttribute("mem");
	if(mem != null){
		
      out.write("\r\n");
      out.write("		회원정보:<input type=\"text\" value=\"");
      out.print(mem.toString() );
      out.write("\">\r\n");
      out.write("		");

	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("<hr>\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("<!-- id 확인 -->\r\n");
      out.write("id:<input type=\"text\" id=\"idcheck\"><br><br>\r\n");
      out.write("<button type=\"button\" onclick=\"idfunc()\">아이디체크</button>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function idfunc() {\r\n");
      out.write("	// ajax는 이동이 안됨\r\n");
      out.write("	// 1. servlet-context에 설정 해줘야함\r\n");
      out.write("	// 2. HelloController에 @ResponseBody 꼭 붙여줘야함 \r\n");
      out.write("	$.ajax({\r\n");
      out.write("		url:\"idcheck.do\",\r\n");
      out.write("		type:\"get\",\r\n");
      out.write("		data:{\"id: \":$(\"#idcheck\").val()},\r\n");
      out.write("		success: function(msg){\r\n");
      out.write("			alert('success');\r\n");
      out.write("			alert(msg);\r\n");
      out.write("		},\r\n");
      out.write("		error:function(){\r\n");
      out.write("			alert('error');\r\n");
      out.write("		}\r\n");
      out.write("	})\r\n");
      out.write("	\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("<hr>\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("id:<input type=\"text\" id=\"id\"><br>\r\n");
      out.write("pwd:<input type=\"text\" id=\"pwd\"><br>\r\n");
      out.write("name:<input type=\"text\" id=\"name\"><br>\r\n");
      out.write("email:<input type=\"text\" id=\"email\"><br>\r\n");
      out.write("<button type=\"button\" id=\"account\">회원가입</button>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(\"#account\").click(function(){\r\n");
      out.write("	let member = {\r\n");
      out.write("			\"id\": $(\"#id\").val(),\r\n");
      out.write("			\"pwd\":$(\"#pwd\").val(),\r\n");
      out.write("			\"name\":$(\"#name\").val(),\r\n");
      out.write("			\"email\":$(\"#email\").val()\r\n");
      out.write("	};\r\n");
      out.write("	\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		url:\"account.do\",\r\n");
      out.write("		type: \"post\",\r\n");
      out.write("		data:member,\r\n");
      out.write("		async:true,\r\n");
      out.write("		success:function(msg){// msg: HelloController에서 return값으로 넘어옴\r\n");
      out.write("			alert(msg);\r\n");
      out.write("		},\r\n");
      out.write("		error:function(){\r\n");
      out.write("			alert('error');\r\n");
      out.write("		}\r\n");
      out.write("	})\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("<hr>\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("<button type=\"button\" id=\"listBtn\">list 가져오기</button>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(\"#listBtn\").click(function(){\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		url:\"getlist.do\",\r\n");
      out.write("		type:\"get\",\r\n");
      out.write("		success:function(list){\r\n");
      out.write("			//alert(JSON.stringify(list));\r\n");
      out.write("			alert(list[1].id);	// qwe <- 홍길동의 아이디\r\n");
      out.write("		},\r\n");
      out.write("		error:function(){\r\n");
      out.write("			alert('error');\r\n");
      out.write("		}\r\n");
      out.write("	})\r\n");
      out.write("})\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("<hr>\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("<button type=\"button\" id=\"mapbtn\">맵가져오기</button>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(\"#mapbtn\").click(function(){\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		url:\"getmap.do\",\r\n");
      out.write("		type:\"get\",\r\n");
      out.write("		success:function(map){\r\n");
      out.write("			//alert(\"success\")\r\n");
      out.write("			alert(JSON.stringify(map));\r\n");
      out.write("		},\r\n");
      out.write("		error:function(){\r\n");
      out.write("			alert('error');\r\n");
      out.write("		}\r\n");
      out.write("	})\r\n");
      out.write("})\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
