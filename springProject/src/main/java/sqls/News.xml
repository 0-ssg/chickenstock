<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="News">

<select id="bbslist" parameterType="ssg.com.a.dto.NewsParam"
		resultType="ssg.com.a.dto.NewsDto">
	<!-- select seq, id, ref, step, depth,
		title, content, wdate, del, readcount
	from bbs -->
	select *
	from news
	<if test="choice != null and choice != '' and search != null and search != '' ">
		<if test="choice == 'title'">
			where title like concat('%', #{search}, '%') and del=0
		</if>
		<if test="choice == 'content'">
			where content like concat('%', #{search}, '%') and del=0
		</if>
		<if test="choice == 'writer'">
			where id=#{search} and del=0
		</if>	
	</if>
	<!-- order by ref desc, step asc -->
	order by seq
	limit ${(pageNumber * 10)}, 10	
</select>

<select id="getallbbs" parameterType="ssg.com.a.dto.NewsParam"
		resultType="java.lang.Integer">
	select count(*) 
	from news
	<if test="choice != null and choice != '' and search != null and search != '' ">
		<if test="choice == 'title'">
			where title like concat('%', #{search}, '%') and del=0
		</if>
		<if test="choice == 'content'">
			where content like concat('%', #{search}, '%') and del=0
		</if>
		<if test="choice == 'writer'">
			where id=#{search} and del=0
		</if>	
	</if>
</select>

<insert id="bbswrite" parameterType="ssg.com.a.dto.NewsDto">
	insert into news(write_id, source, title, views, content, del, publication_date, image)
	values(#{write_id}, #{source}, #{title}, 0, #{content}, 0, now(), null)
</insert>
<!-- (select ifnull(max(ref), 0)+1 from news b) -->

<select id="bbsdetail" parameterType="java.lang.Integer" 
				resultType="ssg.com.a.dto.NewsDto">
	select seq, write_id, source, title, views, content, del, publication_date, image
	from news
	where seq=#{seq}
</select>

<select id="bbsget" parameterType="java.lang.Integer" resultType="ssg.com.a.dto.NewsDto">
	select seq, write_id, source, title, views, content, del, publication_date, image
	from news
	where seq=#{seq}
</select>

<update id="bbsupdate" parameterType="ssg.com.a.dto.NewsDto" >
	update news 
	set title=#{title}, content=#{content} ,source=#{source}
	where seq=#{seq}
</update>

<update id="bbsdelete" parameterType="ssg.com.a.dto.NewsDto">
	update news
	set del=1
	where seq=#{seq}
</update>

<!-- 답글 -->
<!-- 수정 -->
<update id="BbsAnswerUpdate" parameterType="ssg.com.a.dto.NewsDto">
	update news_comment
	set step=step+1
	where ref=(select ref from (select ref from news_comment a where seq=#{seq}) A)
		and step>(select step from (select step from news_comment b where seq=#{seq}) B)
</update>

<!-- 추가 -->
<insert id="BbsAnswerInsert" parameterType="ssg.com.a.dto.NewsDto">
	insert into news_comment(user_id, ref, step, depth, title, content, write_date, del, views)
	values(#{uesr_id}, (select ref from news_comment a where seq=#{seq}),
				  (select step from news_comment b where seq=#{seq})+1,
				  (select depth from news_comment c where seq=#{seq})+1,
			#{title}, #{content}, now(), 0, 0)
</insert>

<!-- 댓글(bbscomment) -->
<!-- 추가 -->
<insert id="commentWrite" parameterType="ssg.com.a.dto.NewsComment">
	insert into news_comment(post_num, user_id, content, write_date)
	values(#{post_num}, #{user_id}, #{content}, now())
</insert>

<insert id="commentAnswerInsert" parameterType="ssg.com.a.dto.NewsComment">
	insert into news_comment(post_num, user_id, content, write_date, ref, step, depth)
	values(#{post_num}, #{user_id}, #{content}, now(),
			 (select ref from news_comment a where seq=#{seq}),
			 (select step from news_comment b where seq=#{seq})+1,
			 (select depth from news_comment c where seq=#{seq})+1,)
</insert>

<update id="commentAnswerUpdate" parameterType="ssg.com.a.dto.NewsDto">
	update news_comment
	set step=step+1
	where ref=(select ref from (select ref from news_comment a where seq=#{seq}) A)
		and step>(select step from (select step from news_comment b where seq=#{seq}) B)
</update>
<!-- 목록 -->
<select id="commentList" parameterType="java.lang.Integer" resultType="ssg.com.a.dto.NewsComment">
	select seq, user_id, content, write_date
	from news_comment
	where seq=#{seq}
	order by write_date desc
</select>

</mapper>














